# Generated by Django 4.0.6 on 2022-07-15 15:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Film',
            fields=[
                ('film_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('episode_id', models.IntegerField(blank=True, null=True)),
                ('opening_crawl', models.TextField(blank=True, max_length=1000, null=True)),
                ('director', models.CharField(blank=True, max_length=100, null=True)),
                ('producer', models.CharField(blank=True, max_length=100, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Film',
                'verbose_name_plural': 'Films',
                'db_table': 'film',
                'ordering': ['title'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmCharacter',
            fields=[
                ('film_person_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Film Character',
                'verbose_name_plural': 'Film Characters',
                'db_table': 'film_character',
                'ordering': ['film', 'person'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmPlanet',
            fields=[
                ('film_planet_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Film Planet',
                'verbose_name_plural': 'Film Planets',
                'db_table': 'film_planet',
                'ordering': ['film', 'planet'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('birth_year', models.CharField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('mass', models.CharField(blank=True, max_length=10, null=True)),
                ('eye_color', models.CharField(blank=True, max_length=20, null=True)),
                ('hair_color', models.CharField(blank=True, max_length=20, null=True)),
                ('skin_color', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'db_table': 'person',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('planet_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('rotation_period', models.CharField(blank=True, max_length=40, null=True)),
                ('orbital_period', models.CharField(blank=True, max_length=40, null=True)),
                ('diameter', models.CharField(blank=True, max_length=40, null=True)),
                ('climate', models.CharField(blank=True, max_length=40, null=True)),
                ('gravity', models.CharField(blank=True, max_length=40, null=True)),
                ('terrain', models.CharField(blank=True, max_length=40, null=True)),
                ('surface_water', models.CharField(blank=True, max_length=40, null=True)),
                ('population', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'Planet',
                'verbose_name_plural': 'Planets',
                'db_table': 'planet',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('species_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('classification', models.CharField(blank=True, max_length=40, null=True)),
                ('designation', models.CharField(blank=True, max_length=40, null=True)),
                ('average_height', models.CharField(blank=True, max_length=40, null=True)),
                ('skin_colors', models.CharField(blank=True, max_length=200, null=True)),
                ('hair_colors', models.CharField(blank=True, max_length=200, null=True)),
                ('eye_colors', models.CharField(blank=True, max_length=200, null=True)),
                ('average_lifespan', models.CharField(blank=True, max_length=40, null=True)),
                ('language', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'Species',
                'verbose_name_plural': 'Species',
                'db_table': 'species',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Starship',
            fields=[
                ('starship_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('starship_class', models.CharField(blank=True, max_length=40, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=40, null=True)),
                ('cost_in_credits', models.CharField(blank=True, max_length=40, null=True)),
                ('length', models.CharField(blank=True, max_length=40, null=True)),
                ('crew', models.CharField(blank=True, max_length=40, null=True)),
                ('passengers', models.CharField(blank=True, max_length=40, null=True)),
                ('max_atmosphering_speed', models.CharField(blank=True, max_length=40, null=True)),
                ('hyperdrive_rating', models.CharField(blank=True, max_length=40, null=True)),
                ('MGLT', models.CharField(blank=True, max_length=40, null=True)),
                ('cargo_capacity', models.CharField(blank=True, max_length=40, null=True)),
                ('consumables', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'Starship',
                'verbose_name_plural': 'Starships',
                'db_table': 'starship',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StarshipPassenger',
            fields=[
                ('starship_passenger_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Starship Passenger',
                'verbose_name_plural': 'Starship Passengers',
                'db_table': 'starship_passenger',
                'ordering': ['starship', 'person'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StarshipPilot',
            fields=[
                ('starship_pilot_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Starship Pilot',
                'verbose_name_plural': 'Starship Pilots',
                'db_table': 'starship_pilot',
                'ordering': ['starship', 'person'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('vehicle_class', models.CharField(blank=True, max_length=40, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=40, null=True)),
                ('length', models.CharField(blank=True, max_length=40, null=True)),
                ('cost_in_credits', models.CharField(blank=True, max_length=40, null=True)),
                ('crew', models.CharField(blank=True, max_length=40, null=True)),
                ('passengers', models.CharField(blank=True, max_length=40, null=True)),
                ('max_atmosphering_speed', models.CharField(blank=True, max_length=40, null=True)),
                ('cargo_capacity', models.CharField(blank=True, max_length=40, null=True)),
                ('consumables', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicle',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehiclePassenger',
            fields=[
                ('vehicle_passenger_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Vehicle Passenger',
                'verbose_name_plural': 'Vehicle Passenger',
                'db_table': 'vehicle_passenger',
                'ordering': ['vehicle', 'person'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehiclePilot',
            fields=[
                ('vehicle_pilot_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Vehicle Pilot',
                'verbose_name_plural': 'Vehicle Pilots',
                'db_table': 'vehicle_pilot',
                'ordering': ['vehicle', 'person'],
                'managed': False,
            },
        ),
    ]
